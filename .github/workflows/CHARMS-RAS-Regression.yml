#name: PowerShell Test
#
#on:
#  workflow_dispatch:
#
#jobs:
#  test:
#    runs-on: NCI-WINDOWS
#    steps:
#      - name: Run a one-line script
#        run: Write-Host "Hello, world!"
#        shell: powershell

name: CHARMS-RAS-REGRESSION

on:
  schedule:
    # This corresponds to 6:00 AM EDT (10:00 AM UTC)
    - cron: '0 10 * * *'
  workflow_dispatch:
    inputs:
      testBrowser:
        description: 'Browser'
        required: true
        default: 'chrome'

jobs:
  build:
    runs-on: NCI-WINDOWS
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Run specific runner class
        shell: cmd
        run: mvn -B -q -Dtest=ServiceNow.CHARMS.Runners.Run_CHARMS_RAS_Regression_Test test
        continue-on-error: true

      - name: Generate timestamp
        id: timestamp
        shell: cmd
        run: |
          for /f "tokens=*" %%i in ('powershell -command "Get-Date -Format yyyy-MM-dd_HH-mm-ss"') do set timestamp=%%i
          echo timestamp=%timestamp% >> %GITHUB_ENV%

      - name: Determine report path
        id: reportpath
        shell: cmd
        run: echo path=html-charms-rasopathy-regression-reports >> %GITHUB_ENV%

      - name: Upload Cucumber Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: CHARMS-RAS-REGRESSION-${{ env.timestamp }}
          path: target/html-charms-rasopathy-regression-reports/*

      - name: Setup Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Requirements
        run: |
          pip install requests
          pip install requests_ntlm

      - name: Upload to SharePoint
        run: python .github/scripts/upload_to_sharepoint.py
        env:
          file_path: target/html-charms-rasopathy-regression-reports/*
          host_name: 'nih.sharepoint.com'
          site_name: 'sites/NCI-CBIITQualityAssuranceandTestingTeam'
          upload_path: 'Shared%20Documents/Platform%20Scientific%20-%20CHARMS/TEST%20AUTOMATION%20REPORTS'
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_CLIENT_ID }}
          client_secret: ${{ secrets.SHAREPOINT_CLIENT_SECRET }}

#      - name: Push HTML Report
#        shell: bash
#        env:
#          GH_TOKEN: ${{ secrets.GH_TOKEN }}
#        run: |
#          git config --global user.email "juarezds@nih.gov"
#          git config --global user.name "iamdez99"
#          git stash
#          git fetch
#          git checkout gh-pages
#          git checkout stash -- .
#          mkdir -p ${{ env.path }}
#          mv target/html-charms-rasopathy-regression-reports/*.html ${{ env.path }}/report-${{ env.timestamp }}.html
#          git add .
#          git commit -m "Publishing cucumber report ${{ env.timestamp }}"
#          git push -f https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:gh-pages
#
#      - name: Update Test Results and Append to Index File
#        shell: bash
#        env:
#          GH_TOKEN: ${{ secrets.GH_TOKEN }}
#        run: |
#          if [[ -f "charms-ras-test-results.html" ]]; then
#              sed -i '1s/.*/<h1>CHARMS RAS Test Results<\/h1>/' charms-ras-test-results.html
#              echo "<h3><a href='${{ env.path }}/report-${{ env.timestamp }}.html'>Test Report ${{ env.path }}/report-${{ env.timestamp }}.html</a></h3>" >> charms-ras-test-results.html
#              git add charms-ras-test-results.html
#              git commit -m "Update charms-ras-test-results.html"
#          else
#              echo "<h1>CHARMS RAS Test Results</h1>" > charms-ras-test-results.html
#              echo "<h3><a href='${{ env.path }}/report-${{ env.timestamp }}.html'>Test Report ${{ env.path }}/report-${{ env.timestamp }}.html</a></h3>" >> charms-ras-test-results.html
#              git add charms-ras-test-results.html
#              git commit -m "Create and update charms-ras-test-results.html"
#          fi
#          git push https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:gh-pages
package ServiceNow.CHARMS.FanconiSurvey.Playwright.StepsImplementation;

import ServiceNow.CHARMS.FanconiSurvey.Playwright.Pages.FanconiSurveyLoginPage;
import com.microsoft.playwright.Locator;
import com.microsoft.playwright.Page;
import com.microsoft.playwright.options.AriaRole;
import com.nci.automation.utils.CucumberLogUtils;
import com.nci.automation.web.PlaywrightUtils;
import static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;

/* This method allows the login to the Fanconi Survey page */
public class FanconiSurveyStepsImpl {
    public static void login() {
        var page = PlaywrightUtils.page;
        page.navigate(FanconiSurveyLoginPage.FANCONI_SURVEY_URL);
        page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.LOGIN_BUTTON_LINK)).click();
        page.getByLabel(FanconiSurveyLoginPage.USERNAME).fill(FanconiSurveyLoginPage.EMAIL);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.NEXT)).click();
        page.getByLabel(FanconiSurveyLoginPage.PASSWORD).fill(FanconiSurveyLoginPage.USER_PASSWORD);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.VERIFY)).click();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.AGREE)).click();
        assertThat(page.getByText(FanconiSurveyLoginPage.NCI_FAMILY_STUDIES_HUB)).containsText(FanconiSurveyLoginPage.NCI_FAMILY_STUDIES_HUB);
        assertThat(page.getByText(FanconiSurveyLoginPage.PLEASE_COMPLETE_THE_AVAILABLE)).containsText(FanconiSurveyLoginPage.PLEASE_COMPLETE_THE_AVAILABLE);
        assertThat(page.getByText(FanconiSurveyLoginPage.ELIGIBILITY_QUESTIONNAIRE).first()).containsText(FanconiSurveyLoginPage.ELIGIBILITY_QUESTIONNAIRE);
        assertThat(page.locator(FanconiSurveyLoginPage.SELECTOR).filter(new Locator.FilterOptions().setHasText(FanconiSurveyLoginPage.FANCONI_STUDY_SURVEY))).containsText(FanconiSurveyLoginPage.FANCONI_STUDY_SURVEY);
        assertThat(page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.UPLOAD_ATTACHMENT))).containsText(FanconiSurveyLoginPage.UPLOAD_ATTACHMENT);
        assertThat(page.getByText(FanconiSurveyLoginPage.IF_YOU_HAVE_ANY_QUESTIONS)).containsText(FanconiSurveyLoginPage.IF_YOU_HAVE_ANY_QUESTIONS);
        page.locator(FanconiSurveyLoginPage.SELECTOR).filter(new Locator.FilterOptions().setHasText(FanconiSurveyLoginPage.FANCONI_STUDY_SURVEY)).click();
        assertThat(page.getByRole(AriaRole.BANNER)).containsText(FanconiSurveyLoginPage.NCI_FAMILY_STUDIES_HUB_FANCONI_CANCER);
        assertThat(page.getByText(FanconiSurveyLoginPage.THANK_YOU_FOR_STARTING)).containsText(FanconiSurveyLoginPage.THANK_YOU_FOR_STARTING);
        assertThat(page.getByText(FanconiSurveyLoginPage.THIS_IS_A_STUDY)).containsText(FanconiSurveyLoginPage.THIS_IS_A_STUDY);
        assertThat(page.getByText(FanconiSurveyLoginPage.THIS_QUESTIONNAIRE_MAY_TAKE)).containsText(FanconiSurveyLoginPage.THIS_QUESTIONNAIRE_MAY_TAKE);
        assertThat(page.getByText(FanconiSurveyLoginPage.NOTE_THE_STUDY_TEAM_REQUESTS)).containsText(FanconiSurveyLoginPage.NOTE_THE_STUDY_TEAM_REQUESTS);
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SURVEY_SECTIONS))).containsText(FanconiSurveyLoginPage.SURVEY_SECTIONS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.DEMOGRAPHICS).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.DEMOGRAPHICS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.MEDICAL_HISTORY, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.MEDICAL_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.MEDICAL_HISTORY_CONTINUED).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.MEDICAL_HISTORY_CONTINUED);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.REPRODUCTIVE_HISTORY).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.REPRODUCTIVE_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.SURGICAL_MEDICATION_AND_OTHER_MEDICAL_HISTORY).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.SURGICAL_MEDICATION_AND_OTHER_MEDICAL_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.SEXUAL_HISTORY).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.SEXUAL_HISTORY);
        CucumberLogUtils.playwrightScreenshot(PlaywrightUtils.page);
    }

    /* This method allows the submissions and assertions of the Background Information section of the Fanconi Survey for scenario1.*/
    public static void backgroundInformationSectionScenario1() {
        var page = PlaywrightUtils.page;
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION)).isEnabled();
        page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION).click();
        assertThat(page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.HOME))).isVisible();
        assertThat(page.getByLabel(FanconiSurveyLoginPage.PAGE_BREADCRUMBS).getByRole(AriaRole.LIST)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.locator(FanconiSurveyLoginPage.H_2)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FORM, new Page.GetByLabelOptions().setExact(true))).containsText(FanconiSurveyLoginPage.INDICATES_REQUIRED);
        assertThat(page.getByText(FanconiSurveyLoginPage.THIS_FIRST_SECTION)).containsText(FanconiSurveyLoginPage.THIS_FIRST_SECTION);
        assertThat(page.getByText(FanconiSurveyLoginPage.PLEASE_RESPOND_FROM_THE_PERSPECTIVE_OF_THE_PARTICIPANT)).containsText(FanconiSurveyLoginPage.PLEASE_RESPOND_FROM_THE_PERSPECTIVE_OF_THE_PARTICIPANT);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FORM, new Page.GetByLabelOptions().setExact(true)).getByText(FanconiSurveyLoginPage.TO_CONFIRM_ARE_YOU_COMPLETING_THIS_FORM_FOR_YOURSELF_OR_FOR_SOMEONE_ELSE, new Locator.GetByTextOptions().setExact(true))).containsText(FanconiSurveyLoginPage.TO_CONFIRM_ARE_YOU_COMPLETING_THIS_FORM_FOR_YOURSELF_OR_FOR_SOMEONE_ELSE);
        assertThat(page.getByText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_SOMEONE_ELSE)).containsText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_SOMEONE_ELSE);
        assertThat(page.getByText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_MYSELF)).containsText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_MYSELF);
        page.getByText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_SOMEONE_ELSE).click();
        assertThat(page.getByText(FanconiSurveyLoginPage.PROXY_ENTER_YOUR_NAME)).containsText(FanconiSurveyLoginPage.PROXY_ENTER_YOUR_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PROXY_FIRST_NAME)).containsText(FanconiSurveyLoginPage.FIRST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PROXY_FIRST_NAME).fill(FanconiSurveyLoginPage.PROXY_FIRST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PROXY_MIDDLE_INITIAL)).containsText(FanconiSurveyLoginPage.MIDDLE_INITIAL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PROXY_MIDDLE_INITIAL).fill(FanconiSurveyLoginPage.PROXY_MIDDLE_INITIAL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PROXY_LAST_NAME).getByText(FanconiSurveyLoginPage.LAST_NAME)).containsText(FanconiSurveyLoginPage.LAST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PROXY_LAST_NAME).fill(FanconiSurveyLoginPage.PROXY_LAST_NAME);
        assertThat(page.getByText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_NAME)).containsText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FIRST_NAME)).containsText(FanconiSurveyLoginPage.FIRST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FIRST_NAME).fill(FanconiSurveyLoginPage.PARTICIPANT_FIRST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_LAST_NAME)).containsText(FanconiSurveyLoginPage.LAST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_LAST_NAME).fill(FanconiSurveyLoginPage.PARTICIPANT_LAST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MIDDLE_INITIAL)).containsText(FanconiSurveyLoginPage.MIDDLE_INITIAL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MIDDLE_INITIAL).fill(FanconiSurveyLoginPage.PARTICIPANT_MIDDLE_INITIAL);
        assertThat(page.getByText(FanconiSurveyLoginPage.WHO_IS_YOUR_THE_PARTICIPANT_PHYSICIAN)).containsText(FanconiSurveyLoginPage.WHO_IS_YOUR_THE_PARTICIPANT_PHYSICIAN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_INFO)).containsText(FanconiSurveyLoginPage.PHYSICIAN_CONTACT_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TREATING_PHYSICIAN)).containsText(FanconiSurveyLoginPage.PHYSICIAN_DETAILS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PHYSICIAN)).containsText(FanconiSurveyLoginPage.ADD);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME_AND_LAST_NAME);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION_CITY_STATE_PROVINCE_COUNTRY_ZIP_CODE);
        assertThat(page.getByRole(AriaRole.COLUMNHEADER, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME))).isVisible();
        assertThat(page.getByRole(AriaRole.COLUMNHEADER, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION))).isVisible();
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.TELEPHONE);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.FAX_NUMBER);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.EMAIL_ADDRESS);
        assertThat(page.getByRole(AriaRole.CELL)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PHYSICIAN).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_NAME_OF_PHYSICIAN)).containsText(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME_AND_LAST_NAME);
        page.getByLabel(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME).click();
        page.getByLabel(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME).fill(FanconiSurveyLoginPage.PHYSICIAN_FIRST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TREATMENT_FACILITY)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME);
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME).click();
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME).fill(FanconiSurveyLoginPage.INSTITUTION_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TREATMENT_FACILITY_LOCATION)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION_CITY_STATE_PROVINCE_COUNTRY_ZIP_CODE);
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION).click();
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION).fill(FanconiSurveyLoginPage.INSTITUTION_LOCATION);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_TELEPHONE)).containsText(FanconiSurveyLoginPage.TELEPHONE);
        page.getByLabel(FanconiSurveyLoginPage.TELEPHONE).click();
        page.getByLabel(FanconiSurveyLoginPage.TELEPHONE).fill(FanconiSurveyLoginPage.ADD_TELEPHONE_NUMBER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_FAX_NUMBER)).containsText(FanconiSurveyLoginPage.FAX_NUMBER);
        page.getByLabel(FanconiSurveyLoginPage.FAX_NUMBER).click();
        page.getByLabel(FanconiSurveyLoginPage.FAX_NUMBER).fill(FanconiSurveyLoginPage.ADD_FAX_NUMBER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_EMAIL_ADDRESS)).containsText(FanconiSurveyLoginPage.EMAIL_ADDRESS);
        page.getByLabel(FanconiSurveyLoginPage.EMAIL_ADDRESS).click();
        page.getByLabel(FanconiSurveyLoginPage.EMAIL_ADDRESS).fill(FanconiSurveyLoginPage.ADD_EMAIL_ADDRESS);
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.PHYSICIAN_FIRST_NAME))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_NAME))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_LOCATION))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD_TELEPHONE_NUMBER))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD_FAX_NUMBER))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD_EMAIL_ADDRESS))).isVisible();
        assertThat(page.locator(FanconiSurveyLoginPage.NUM_AFFECTED_FAMILY_MEMBER)).containsText(FanconiSurveyLoginPage.NUM_AFFECTED_FAMILY_MEMBER_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_NUM_AFFECTED_FAMILY_MEMBER_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName("1").setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAIL_LABEL)).containsText(FanconiSurveyLoginPage.AFFECTED_FAMILY_MEMBER_DETAIL_NOTE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.FAMILY_MEMBERS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.FAMILY_MEMBER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.CURRENT_VITAL_STATUS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.CURRENT_AGE_OR_AGE_AT_DEATH);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.HAVE_THEY_RECEIVED_A_HEMATOPOIETIC_STEM_CELL_TRANSPLANT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.DO_THEY_HAVE_A_HISTORY_OF_CANCER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.IF_YES_SPECIFY_CANCER_TYPE_SITE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_CANCER_TYPE_SITE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_FAMILY_MEMBERS).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_RELATION)).containsText(FanconiSurveyLoginPage.FAMILY_MEMBER);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FAMILY_MEMBERS, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SP_HELP_TAG)).containsText(FanconiSurveyLoginPage.IF_YOU_DO_NOT_KNOW_PLEASE_SELECT_UNKNOWN_UNSURE);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_RELATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_OTHER_RELATIVE_PLEASE_SPECIFY)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY);
        page.getByLabel(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY, new Page.GetByLabelOptions().setExact(true)).click();
        page.getByLabel(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY, new Page.GetByLabelOptions().setExact(true)).fill(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_VITAL_STATUS)).containsText(FanconiSurveyLoginPage.CURRENT_VITAL_STATUS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_VITAL_STATUS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ALIVE)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CURRENT_AGE_OR_AGE_AT_DEATH)).containsText(FanconiSurveyLoginPage.CURRENT_AGE_OR_AGE_AT_DEATH);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CURRENT_AGE_OR_AGE_AT_DEATH_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_STEM_CELL_TRANSPLANT)).containsText(FanconiSurveyLoginPage.HAVE_THEY_RECEIVED_A_HEMATOPOIETIC_STEM_CELL_TRANSPLANT);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_STEM_CELL_TRANSPLANT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CANCER)).containsText(FanconiSurveyLoginPage.DO_THEY_HAVE_A_HISTORY_OF_CANCER);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CANCER_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CANCER)).containsText(FanconiSurveyLoginPage.DO_THEY_HAVE_A_HISTORY_OF_CANCER);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CANCER_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CANCER_DETAILS)).containsText(FanconiSurveyLoginPage.IF_YES_SPECIFY_CANCER_TYPE_SITE);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CANCER_DETAILS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCER_ENTERED)).click();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.ALIVE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.YES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.YES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.CANCER_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FAMILY_CAMP)).containsText(FanconiSurveyLoginPage.FA_FAMILY_CAMP_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FAMILY_CAMP_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FAMILY_CAMP_COUNT)).containsText(FanconiSurveyLoginPage.FA_FAMILY_CAMP_COUNT_DETAILS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FAMILY_CAMP_COUNT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_FAMILY_CAMP_COUNT_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_INCLUDED_IN_PUBLICATION)).containsText(FanconiSurveyLoginPage.FA_INCLUDED_IN_PUBLICATION_DETAILS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_INCLUDED_IN_PUBLICATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PUBLICATION)).containsText(FanconiSurveyLoginPage.FA_PUBLICATION_DETAILS);
        page.getByLabel(FanconiSurveyLoginPage.PLEASE_PROVIDE_ANY_ADDITIONAL).click();
        page.getByLabel(FanconiSurveyLoginPage.PLEASE_PROVIDE_ANY_ADDITIONAL).fill(FanconiSurveyLoginPage.PLEASE_PROVIDE_ANY_ADDITIONAL_DETAILS);
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT)).click();
    }

    /* This method allows the submissions and assertions of the Demographic section of the Fanconi Survey for scenario1.*/
    public static void demographicSectionScenario1() {
        var page = PlaywrightUtils.page;
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.DEMOGRAPHICS).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.DEMOGRAPHICS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.DEMOGRAPHICS)).isEnabled();
        page.getByLabel(FanconiSurveyLoginPage.DEMOGRAPHICS).click();
        assertThat(page.getByLabel(FanconiSurveyLoginPage.PAGE_BREADCRUMBS).getByRole(AriaRole.LINK)).containsText(FanconiSurveyLoginPage.HOME);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.PAGE_BREADCRUMBS).getByRole(AriaRole.LIST)).containsText(FanconiSurveyLoginPage.DEMOGRAPHICS);
        assertThat(page.locator(FanconiSurveyLoginPage.H_2)).containsText(FanconiSurveyLoginPage.DEMOGRAPHICS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FORM, new Page.GetByLabelOptions().setExact(true))).containsText(FanconiSurveyLoginPage.INDICATES_REQUIRED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_DEMOGRAPHICS_HEADER_1)).containsText(FanconiSurveyLoginPage.NEXT_BLOCK_OF_QUESTIONS_WILL_COLLECT_BASIC_DEMOGRAPHIC_INFORMATION);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_DEMOGRAPHICS_HEADER_1)).containsText(FanconiSurveyLoginPage.PLEASE_RESPOND_FROM_THE_PERSPECTIVE_OF_THE_PARTICIPANT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_BIO_MOTHER_LABEL)).containsText(FanconiSurveyLoginPage.BIOLOGICAL_MOTHER_S_INFORMATION);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_ETHNICITY)).containsText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_BIOLOGICAL_MOTHER_S_ETHNICITY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MOTHER_ETHNICITY_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MOTHER_ETHNICITY_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHERS_RACE)).containsText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_BIOLOGICAL_MOTHER_S_RACE);
        page.locator(FanconiSurveyLoginPage.ID_AUTOGEN_3).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MOTHERS_RACE_ENTERED)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_BIO_FATHER_LABEL)).containsText(FanconiSurveyLoginPage.BIOLOGICAL_FATHER_S_INFORMATION);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FATHERS_ETHNICITY)).containsText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_BIOLOGICAL_FATHER_S_ETHNICITY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FATHERS_ETHNICITY_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FATHER_ETHNICITY_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FATHERS_RACE)).containsText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_BIOLOGICAL_FATHER_S_RACE);
        page.locator(FanconiSurveyLoginPage.ID_AUTOGEN_4).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FATHERS_RACE_ENTERED).setExact(true)).click();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT)).click();
    }

    /* This method allows the submissions and assertions of the Medical History section of the Fanconi Survey for scenario1.*/
    public static void medicalHistorySectionScenario1() {
        var page = PlaywrightUtils.page;
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.DEMOGRAPHICS).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.DEMOGRAPHICS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.MEDICAL_HISTORY, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.MEDICAL_HISTORY);
        page.getByLabel(FanconiSurveyLoginPage.MEDICAL_HISTORY, new Page.GetByLabelOptions().setExact(true)).click();
        assertThat(page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.HOME))).isVisible();
        assertThat(page.getByLabel(FanconiSurveyLoginPage.PAGE_BREADCRUMBS).getByText(FanconiSurveyLoginPage.MEDICAL_HISTORY)).isVisible();
        assertThat(page.locator(FanconiSurveyLoginPage.H_2)).containsText(FanconiSurveyLoginPage.MEDICAL_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FORM, new Page.GetByLabelOptions().setExact(true))).containsText(FanconiSurveyLoginPage.INDICATES_REQUIRED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MEDICAL_HISTORY_HEADER_1)).containsText(FanconiSurveyLoginPage.ASKS_YOU_TO_TELL_US_SOME_GENERAL_MEDICAL_HISTORY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MEDICAL_HISTORY_HEADER_1)).containsText(FanconiSurveyLoginPage.PLEASE_RESPOND_FROM_THE_PERSPECTIVE_OF_THE_PARTICIPANT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_HAD_PRENATAL_TESTS)).containsText(FanconiSurveyLoginPage.MOTHER_HAD_PRENATAL_TESTS_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MOTHER_HAD_PRENATAL_TESTS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_MRVS_LABEL)).containsText(FanconiSurveyLoginPage.ADD_THE_RESULTS_OF_PRENATAL_TESTS_ADMINISTERED_TO_THE_BIOLOGICAL_MOTHER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.PRENATAL_TEST_RESULT_DETAILS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PRENATAL_TEST)).isVisible();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS).getByText(FanconiSurveyLoginPage.ADD_REMOVE_ALL)).isVisible();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.PRENATAL_TEST);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.OTHER_PRENATAL_TEST_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.TEST_RESULT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PRENATAL_TEST).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST)).containsText(FanconiSurveyLoginPage.PRENATAL_TEST);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PRENATAL_TEST_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_PRENATAL_TEST_ENTERED)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TEST_RESULT)).containsText(FanconiSurveyLoginPage.TEST_RESULT);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_TEST_RESULT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_TEST_RESULT_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.MRVS_ACTIVE_ROW)).containsText(FanconiSurveyLoginPage.CANCEL);
        assertThat(page.locator(FanconiSurveyLoginPage.MRVS_SAVE_BUTTON)).containsText(FanconiSurveyLoginPage.ADD);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.FA_PRENATAL_TEST_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PRENATAL_TEST_RESULT_MRVS)).containsText(FanconiSurveyLoginPage.FA_TEST_RESULT_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_COMPLICATIONS)).containsText(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_COMPLICATIONS_DETAIL);
        page.locator(FanconiSurveyLoginPage.ID_AUTOGEN_16).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.BIOLOGICAL_MOTHER_HAD_NO)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_TAKEN_PREGNANCY_MEDICATION)).containsText(FanconiSurveyLoginPage.FA_MOTHER_TAKEN_PREGNANCY_MEDICATION_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_TAKEN_PREGNANCY_MEDICATION)).containsText(FanconiSurveyLoginPage.FA_MOTHER_TAKEN_PREGNANCY_MEDICATION_HELPTEXT);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MOTHER_TAKEN_PREGNANCY_MEDICATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MEDICATION_MRVS_LABEL)).containsText(FanconiSurveyLoginPage.FA_MEDICATION_MRVS_LABEL_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.PREGNANCY_MEDICATION_DETAILS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.TYPE_OF_MEDICATION);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.OTHER_MEDICATION_TYPE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.MEDICATION_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.REASON_MEDICATION_PRESCRIBED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.LENGTH_OF_TIME_MEDICATION_WAS_TAKEN_DURING_PREGNANCY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.LENGTH_OF_TIME_IN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PREGNANCY).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MEDICATION_TYPE)).containsText(FanconiSurveyLoginPage.TYPE_OF_MEDICATION);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MEDICATION_TYPE_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ANTIBIOTICS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MEDICATION_NAME)).containsText(FanconiSurveyLoginPage.MEDICATION_NAME);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.PREGNANCY_MEDICATION_DETAILS, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SP_HELP_TAG)).containsText("Generic or brand name is OK");
        page.getByLabel(FanconiSurveyLoginPage.MEDICATION_NAME, new Page.GetByLabelOptions().setExact(true)).click();
        page.getByLabel(FanconiSurveyLoginPage.MEDICATION_NAME, new Page.GetByLabelOptions().setExact(true)).fill(FanconiSurveyLoginPage.GENERIC_MEDICATION_TEST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_REASON_PRESCRIBED)).containsText(FanconiSurveyLoginPage.REASON_MEDICATION_PRESCRIBED);
        page.getByLabel(FanconiSurveyLoginPage.REASON_MEDICATION_PRESCRIBED).click();
        page.getByLabel(FanconiSurveyLoginPage.REASON_MEDICATION_PRESCRIBED).fill(FanconiSurveyLoginPage.REASON_MEDICATION_PRESCRIBED_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_LENGTH_OF_TIME_MEDICATION_TAKEN_DURING_PREGNANCY)).containsText(FanconiSurveyLoginPage.LENGTH_OF_TIME_MEDICATION_WAS_TAKEN_DURING_PREGNANCY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_LENGTH_OF_TIME_MEDICATION_TAKEN_DURING_PREGNANCY_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_LENGTH_OF_TIME_MEDICATION_TAKEN_DURING_PREGNANCY_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_LENGTH_OF_TIME_IN)).containsText(FanconiSurveyLoginPage.LENGTH_OF_TIME_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_LENGTH_OF_TIME_IN_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.DAYS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.MRVS_ACTIVE_ROW)).containsText(FanconiSurveyLoginPage.CANCEL);
        assertThat(page.locator(FanconiSurveyLoginPage.MRVS_SAVE_BUTTON)).containsText(FanconiSurveyLoginPage.ADD);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.ANTIBIOTICS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.GENERIC_MEDICATION_TEST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.REASON_MEDICATION_PRESCRIBED_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.FA_LENGTH_OF_TIME_MEDICATION_TAKEN_DURING_PREGNANCY_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PREGNANCY_MEDICATION_MRVS)).containsText(FanconiSurveyLoginPage.DAYS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_LENGTH_IN_WEEKS)).containsText(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_LENGTH_IN_WEEKS_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_LENGTH_IN_WEEKS)).containsText(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_LENGTH_IN_WEEKS_HELPTEXT);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MOTHER_PREGNANCY_LENGTH_IN_WEEKS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_MOTHER_PREGNANCY_LENGTH_IN_WEEKS_ENTERED)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_LABOR_INDUCED)).containsText(FanconiSurveyLoginPage.WAS_YOUR_THE_PARTICIPANT_S_BIOLOGICAL_MOTHER_S_LABOR_INDUCED);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MOTHER_LABOR_INDUCED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MOTHER_DELIVERY_METHOD)).containsText(FanconiSurveyLoginPage.HOW_WERE_YOU_THE_PARTICIPANT_DELIVERED);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MOTHER_DELIVERY_METHOD_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_MOTHER_DELIVERY_METHOD_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MEDICAL_COMPLICATION_AT_BIRTH)).containsText(FanconiSurveyLoginPage.FA_MEDICAL_COMPLICATION_AT_BIRTH_DETAIL);
        page.locator(FanconiSurveyLoginPage.ID_AUTOGEN_17).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.BIRTH_DEFECTS_CONGENITAL)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.HOSPITAL_STAY_REQUIRED_AT_BIRTH)).containsText(FanconiSurveyLoginPage.HOSPITAL_STAY_REQUIRED_AT_BIRTH_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_HOSPITAL_STAY_REQUIRED_AT_BIRTH_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_HOSPITAL_STAY_LENGTH_AT_BIRTH)).containsText(FanconiSurveyLoginPage.FA_HOSPITAL_STAY_LENGTH_AT_BIRTH_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_HOSPITAL_STAY_LENGTH_AT_BIRTH_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_HOSPITAL_STAY_LENGTH_AT_BIRTH_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_HOSPITAL_STAY_LENGTH_AT_BIRTH_IN)).containsText(FanconiSurveyLoginPage.TIME_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_HOSPITAL_STAY_LENGTH_AT_BIRTH_IN_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.DAYS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_LABEL)).containsText(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_LABEL_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.GROWTH_AND_DEVELOPMENT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.PLEASE_FILL_IN_THE_AGE_WHEN_YOU_THE_PARTICIPANT_FIRST_WALKED_WITHOUT_HELP);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.TIME_IN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.PLEASE_FILL_IN_THE_AGE_WHEN_YOU_THE_PARTICIPANT_FIRST_SPOKE_2_3_WORD_SENTENCES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.TIME_IN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.PLEASE_FILL_IN_THE_AGE_WHEN_YOU_THE_PARTICIPANT_WERE_TOILET_TRAINED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.TIME_IN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_GROWTH_AND).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FIRST_WALKED_WITHOUT_HELP_AGE)).containsText(FanconiSurveyLoginPage.PLEASE_FILL_IN_THE_AGE_WHEN_YOU_THE_PARTICIPANT_FIRST_WALKED_WITHOUT_HELP);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FIRST_WALKED_WITHOUT_HELP_AGE_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_FIRST_WALKED_WITHOUT_HELP_AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_WALKING_WITHOUT_HELP_TIME_MEASUREMENT)).containsText(FanconiSurveyLoginPage.TIME_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_WALKING_WITHOUT_HELP_TIME_MEASUREMENT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MONTHS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FIRST_SPOKE_WORD_SENTENCES_AGE)).containsText(FanconiSurveyLoginPage.PLEASE_FILL_IN_THE_AGE_WHEN_YOU_THE_PARTICIPANT_FIRST_SPOKE_2_3_WORD_SENTENCES);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FIRST_SPOKE_WORD_SENTENCES_AGE_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_FIRST_SPOKE_WORD_SENTENCES_AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FIRST_SPOKE_WORD_SENTENCES_TIME_MEASUREMENT)).containsText(FanconiSurveyLoginPage.TIME_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FIRST_SPOKE_WORD_SENTENCES_TIME_MEASUREMENT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MONTHS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_WERE_TOILET_TRAINED_AGE)).containsText(FanconiSurveyLoginPage.PLEASE_FILL_IN_THE_AGE_WHEN_YOU_THE_PARTICIPANT_WERE_TOILET_TRAINED);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_WERE_TOILET_TRAINED_AGE_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_WERE_TOILET_TRAINED_AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_WERE_TOILET_TRAINED_TIME_MEASUREMENT)).containsText(FanconiSurveyLoginPage.TIME_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_WERE_TOILET_TRAINED_TIME_MEASUREMENT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MONTHS)).click();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.FA_FIRST_WALKED_WITHOUT_HELP_AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.MONTHS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.FA_FIRST_SPOKE_WORD_SENTENCES_AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.MONTHS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_GROWTH_AND_DEVELOPMENT_MRVS)).containsText(FanconiSurveyLoginPage.FA_WERE_TOILET_TRAINED_AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_DEVELOPMENT_DELAYED)).containsText(FanconiSurveyLoginPage.TOLD_THAT_YOU_THE_PARTICIPANT_HAD_DELAYED_DEVELOPMENTAL_MILESTONES_OR_SPEECH_DELAY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_DEVELOPMENT_DELAYED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_OCCUPATIONAL_THERAPY_RECEIVED)).containsText(FanconiSurveyLoginPage.EVER_RECEIVED_OCCUPATIONAL_PHYSICAL_THERAPY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_OCCUPATIONAL_THERAPY_RECEIVED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_SPEECH_THERAPY_RECEIVED)).containsText(FanconiSurveyLoginPage.HAVE_YOU_THE_PARTICIPANT_EVER_RECEIVED_SPEECH_THERAPY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_SPEECH_THERAPY_RECEIVED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_COGNITIVE_OR_LEARNING_DELAY)).containsText(FanconiSurveyLoginPage.EVER_TOLD_YOU_THE_PARTICIPANT_HAD_A_COGNITIVE_OR_LEARNING_DELAY);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_COGNITIVE_OR_LEARNING_DELAY_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_IEP_OR_504_PLAN_RECEIVED)).containsText(FanconiSurveyLoginPage.RECEIVED_AN_INDIVIDUALIZED_EDUCATIONAL_PROGRAM_IEP_OR_A_504_PLAN_IN_SCHOOL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_IEP_OR_504_PLAN_RECEIVED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FILL_IN_THE_FOLLOWING_TABLE_FOR_EACH_ILLNESS_LISTED_LABEL)).containsText(FanconiSurveyLoginPage.EACH_OF_THE_ILLNESSES_OF_INTEREST_THAT_YOU_THE_PARTICIPANT_HAS_BEEN_DIAGNOSED_WITH);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FILL_IN_THE_FOLLOWING_TABLE_FOR_EACH_ILLNESS_LISTED_LABEL)).containsText(FanconiSurveyLoginPage.SLAPPED_CHEEK_PAROVIRUS_FREQUENT_EAR_INFECTIONS_MORE_THAN_7_RECURRENT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ILLNESS_DETAILS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.NAME_OF_ILLNESS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.OTHER_ILLNESS_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.WAS_YOUR_THE_PARTICIPANT_S_AGE_WHEN_YOU_THE_PARTICIPANT_HAD_THIS_ILLNESS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.AGE_IN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.LIST_ANY_COMPLICATIONS_THAT_YOU_THE_PARTICIPANT_HAD_FROM_THIS_ILLNESS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_ILLNESS_DETAILS).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_NAME_OF_ILLNESS)).containsText(FanconiSurveyLoginPage.NAME_OF_ILLNESS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_NAME_OF_ILLNESS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_NAME_OF_ILLNESS_ENTERED)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_AGE)).containsText(FanconiSurveyLoginPage.WAS_YOUR_THE_PARTICIPANT_S_AGE_WHEN_YOU_THE_PARTICIPANT_HAD_THIS_ILLNESS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_ILLNESS_AGE_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_ILLNESS_AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AGE_IN)).containsText(FanconiSurveyLoginPage.AGE_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AGE_IN_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MONTHS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_COMPLICATIONS)).containsText(FanconiSurveyLoginPage.LIST_ANY_COMPLICATIONS_THAT_YOU_THE_PARTICIPANT_HAD_FROM_THIS_ILLNESS);
        page.getByLabel(FanconiSurveyLoginPage.LIST_ANY_COMPLICATIONS_THAT).click();
        page.getByLabel(FanconiSurveyLoginPage.LIST_ANY_COMPLICATIONS_THAT).fill(FanconiSurveyLoginPage.TEST_COMPLICATIONS_THAT_THE_PARTICIPANT_HAD_FROM_THIS_ILLNESS);
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.FA_NAME_OF_ILLNESS_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.FA_ILLNESS_AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.MONTHS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ILLNESS_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.TEST_COMPLICATIONS_THAT_THE_PARTICIPANT_HAD_FROM_THIS_ILLNESS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PLEASE_FILL_IN_THE_FOLLOWING_TABLE_FOR_EACH_IMMUNIZATION_VACCINATION_LISTED)).containsText(FanconiSurveyLoginPage.TO_FILL_IN_EACH_IMMUNIZATION_VACCINATION_OF_INTEREST_THAT_YOU_THE_PARTICIPANT_HAS_HAD);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PLEASE_FILL_IN_THE_FOLLOWING_TABLE_FOR_EACH_IMMUNIZATION_VACCINATION_LISTED)).containsText(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_LISTED_HELP_TEXT);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.NAME_OF_IMMUNIZATION_VACCINATION);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.IMMUNIZATIONS_YOU_THE_PARTICIPANT_HAS_RECIVED_SEPARATE_USING_A_COMMA);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.AGE_DID_YOU_THE_PARTICIPANT_RECEIVE_THIS_IMMUNIZATION_VACCINATION);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.AGE_IN);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.PARTICIPANT_COMPLETE_THE_SERIES_NEEDED_FOR_FULL_IMMUNIZATION_VACCINATION);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_IMMUNIZATION).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_NAME_OF_IMMUNIZATION_VACCINATION)).containsText(FanconiSurveyLoginPage.NAME_OF_IMMUNIZATION_VACCINATION);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_NAME_OF_IMMUNIZATION_VACCINATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_NAME_OF_IMMUNIZATION_VACCINATION_ENTERED)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_IMMUNIZATION_VACCINATION_AGE)).containsText(FanconiSurveyLoginPage.AGE_DID_YOU_THE_PARTICIPANT_RECEIVE_THIS_IMMUNIZATION_VACCINATION);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_IMMUNIZATION_VACCINATION_AGE_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_IMMUNIZATION_VACCINATION_AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AGE_MEASUREMENT_RECEIVED_IMMUNIZATION_VACCINATION)).containsText(FanconiSurveyLoginPage.AGE_IN);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AGE_MEASUREMENT_RECEIVED_IMMUNIZATION_VACCINATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.MONTHS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_COMPLETED_FULL_SERIES)).containsText(FanconiSurveyLoginPage.PARTICIPANT_COMPLETE_THE_SERIES_NEEDED_FOR_FULL_IMMUNIZATION_VACCINATION);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_COMPLETED_FULL_SERIES_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.FA_NAME_OF_IMMUNIZATION_VACCINATION_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.FA_IMMUNIZATION_VACCINATION_AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.MONTHS);
        assertThat(page.locator(FanconiSurveyLoginPage.IMMUNIZATION_VACCINATION_DETAILS)).containsText(FanconiSurveyLoginPage.YES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_HAS_ALLERGY)).containsText(FanconiSurveyLoginPage.YOU_THE_PARTICIPANT_ALLERGIC_TO_ANY_FOOD_MEDICATION_ANYTHING_ELSE);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_HAS_ALLERGY_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_INDICATE_IN_THE_TABLE_BELOW_ALLERGIES_LABEL)).containsText(FanconiSurveyLoginPage.TO_INDICATE_IF_YOU_THE_PARTICIPANT_HAS_ALLERGIES_TO_THE_LISTED_ITEMS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ALLERGY_DETAILS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.ALLERGY_TYPE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.FOOD_ITEM);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.MEDICATION_NAMES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.OTHER_ITEM);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.REACTION_TO_ITEM_PLEASE_BE_AS_SPECIFIC_AS_POSSIBLE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_ALLERGY_DETAILS).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TRIGGER_ITEM_TYPE)).containsText(FanconiSurveyLoginPage.ALLERGY_TYPE);
        page.getByLabel(FanconiSurveyLoginPage.ALLERGY_DETAILS, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SELECTOR).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FOOD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FOOD_ALLERGY)).containsText(FanconiSurveyLoginPage.FOOD_ITEM);
        page.getByLabel(FanconiSurveyLoginPage.FOOD_ITEM).click();
        page.getByLabel(FanconiSurveyLoginPage.FOOD_ITEM).fill(FanconiSurveyLoginPage.FOOD_ITEM_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_REACTION_AFTER_EATING_FOOD_ITEM)).containsText(FanconiSurveyLoginPage.REACTION_TO_ITEM_PLEASE_BE_AS_SPECIFIC_AS_POSSIBLE);
        page.getByLabel(FanconiSurveyLoginPage.REACTION_TO_ITEM_PLEASE_BE).click();
        page.getByLabel(FanconiSurveyLoginPage.REACTION_TO_ITEM_PLEASE_BE).fill(FanconiSurveyLoginPage.REACTION_TO_ITEM_PLEASE_ENTERED);
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.FOOD);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.FOOD_ITEM_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_ALLERGY_DETAILS_MRVS)).containsText(FanconiSurveyLoginPage.REACTION_TO_ITEM_PLEASE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_DIAGNOSIS_HEADER)).containsText(FanconiSurveyLoginPage.WILL_ASK_YOU_ABOUT_THE_FANCONI_ANEMIA_DIAGNOSIS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PLEASE_FILL_IN_THE_FOLLOWING_TABLE_FOR_FANCONI_ANEMIA)).containsText(FanconiSurveyLoginPage.DIAGNOSIS_OF_FANCONI_ANEMIA_IN_YOU_THE_PARTICIPANT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.FANCONI_ANEMIA_SIGNS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.WHAT_WERE_THE_FIRST_SIGNS_THAT_LED_TO_A_DIAGNOSIS_OF_FANCONI_ANEMIA);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.OTHER_FANCONI_ANEMIA_SIGNS_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.PLEASE_SELECT_DATE_OR_AGE_FOR_REPORTING);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.MONTH_OF_DIAGNOSIS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.AGE_OF_DIAGNOSIS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.YEAR_OF_DIAGNOSIS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_FANCONI_ANEMIA).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FIRST_SIGNS_THAT_LED_TO_DIAGNOSIS_OF_FANCONI_ANEMIA)).containsText(FanconiSurveyLoginPage.WHAT_WERE_THE_FIRST_SIGNS_THAT_LED_TO_A_DIAGNOSIS_OF_FANCONI_ANEMIA);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FIRST_SIGNS_THAT_LED_TO_DIAGNOSIS_OF_FANCONI_ANEMIA_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.BIRTH_DEFECTS)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_DATE_OR_AGE_WHEN_SIGNS_FIRST_APPEARED)).containsText(FanconiSurveyLoginPage.PLEASE_SELECT_DATE_OR_AGE_FOR_REPORTING);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_DATE_OR_AGE_WHEN_SIGNS_FIRST_APPEARED)).containsText(FanconiSurveyLoginPage.DATE_OR_AGE_WHEN_FANCONI_ANEMIA_SIGNS_FIRST_APPEARED);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_DATE_OR_AGE_WHEN_SIGNS_FIRST_APPEARED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.DATE)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MONTH_SIGNS_FIRST_APPEARED)).containsText(FanconiSurveyLoginPage.MONTH_OF_DIAGNOSIS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MONTH_SIGNS_FIRST_APPEARED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_MONTH_SIGNS_FIRST_APPEARED_ENTERED)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_YEAR_SIGNS_FIRST_APPEARED)).containsText(FanconiSurveyLoginPage.YEAR_OF_DIAGNOSIS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_YEAR_SIGNS_FIRST_APPEARED_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_YEAR_SIGNS_FIRST_APPEARED_ENTERED)).click();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.BIRTH_DEFECTS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.DATE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.FA_MONTH_SIGNS_FIRST_APPEARED_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FANCONI_ANEMIA_SIGNS)).containsText(FanconiSurveyLoginPage.FA_YEAR_SIGNS_FIRST_APPEARED_ENTERED);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT)).click();
    }
}
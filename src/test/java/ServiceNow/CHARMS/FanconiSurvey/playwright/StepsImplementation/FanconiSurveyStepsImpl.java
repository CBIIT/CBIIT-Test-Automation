package ServiceNow.CHARMS.FanconiSurvey.playwright.StepsImplementation;

import ServiceNow.CHARMS.FanconiSurvey.playwright.Pages.FanconiSurveyLoginPage;
import com.microsoft.playwright.Locator;
import com.microsoft.playwright.Page;
import com.microsoft.playwright.options.AriaRole;
import com.nci.automation.utils.CucumberLogUtils;
import com.nci.automation.web.PlaywrightUtils;
import static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;

/* This method allows the submissions and assertions of the Background Information section questionnaire of the Fanconi Survey.*/
public class FanconiSurveyStepsImpl {
    public static void backgroundInformationSection() {
        var page = PlaywrightUtils.page;
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION)).isEnabled();
        page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION).click();
        assertThat(page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.HOME))).isVisible();
        assertThat(page.getByLabel(FanconiSurveyLoginPage.PAGE_BREADCRUMBS).getByRole(AriaRole.LIST)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.locator(FanconiSurveyLoginPage.H_2)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FORM, new Page.GetByLabelOptions().setExact(true))).containsText(FanconiSurveyLoginPage.INDICATES_REQUIRED);
        assertThat(page.getByText(FanconiSurveyLoginPage.THIS_FIRST_SECTION)).containsText(FanconiSurveyLoginPage.THIS_FIRST_SECTION);
        assertThat(page.getByText(FanconiSurveyLoginPage.PLEASE_RESPOND_FROM_THE_PERSPECTIVE_OF_THE_PARTICIPANT)).containsText(FanconiSurveyLoginPage.PLEASE_RESPOND_FROM_THE_PERSPECTIVE_OF_THE_PARTICIPANT);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FORM, new Page.GetByLabelOptions().setExact(true)).getByText(FanconiSurveyLoginPage.TO_CONFIRM_ARE_YOU_COMPLETING_THIS_FORM_FOR_YOURSELF_OR_FOR_SOMEONE_ELSE, new Locator.GetByTextOptions().setExact(true))).containsText(FanconiSurveyLoginPage.TO_CONFIRM_ARE_YOU_COMPLETING_THIS_FORM_FOR_YOURSELF_OR_FOR_SOMEONE_ELSE);
        assertThat(page.getByText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_SOMEONE_ELSE)).containsText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_SOMEONE_ELSE);
        assertThat(page.getByText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_MYSELF)).containsText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_MYSELF);
        page.getByText(FanconiSurveyLoginPage.I_AM_COMPLETING_THIS_FORM_FOR_SOMEONE_ELSE).click();
        assertThat(page.getByText(FanconiSurveyLoginPage.PROXY_ENTER_YOUR_NAME)).containsText(FanconiSurveyLoginPage.PROXY_ENTER_YOUR_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PROXY_FIRST_NAME)).containsText(FanconiSurveyLoginPage.FIRST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PROXY_FIRST_NAME).fill(FanconiSurveyLoginPage.PROXY_FIRST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PROXY_MIDDLE_INITIAL)).containsText(FanconiSurveyLoginPage.MIDDLE_INITIAL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PROXY_MIDDLE_INITIAL).fill(FanconiSurveyLoginPage.PROXY_MIDDLE_INITIAL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PROXY_LAST_NAME).getByText(FanconiSurveyLoginPage.LAST_NAME)).containsText(FanconiSurveyLoginPage.LAST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_PROXY_LAST_NAME).fill(FanconiSurveyLoginPage.PROXY_LAST_NAME);
        assertThat(page.getByText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_NAME)).containsText(FanconiSurveyLoginPage.WHAT_IS_YOUR_THE_PARTICIPANT_S_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FIRST_NAME)).containsText(FanconiSurveyLoginPage.FIRST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FIRST_NAME).fill(FanconiSurveyLoginPage.PARTICIPANT_FIRST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_LAST_NAME)).containsText(FanconiSurveyLoginPage.LAST_NAME);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_LAST_NAME).fill(FanconiSurveyLoginPage.PARTICIPANT_LAST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_MIDDLE_INITIAL)).containsText(FanconiSurveyLoginPage.MIDDLE_INITIAL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_MIDDLE_INITIAL).fill(FanconiSurveyLoginPage.PARTICIPANT_MIDDLE_INITIAL);
        assertThat(page.getByText(FanconiSurveyLoginPage.WHO_IS_YOUR_THE_PARTICIPANT_PHYSICIAN)).containsText(FanconiSurveyLoginPage.WHO_IS_YOUR_THE_PARTICIPANT_PHYSICIAN);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_INFO)).containsText(FanconiSurveyLoginPage.PHYSICIAN_CONTACT_DETAIL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TREATING_PHYSICIAN)).containsText(FanconiSurveyLoginPage.PHYSICIAN_DETAILS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PHYSICIAN)).containsText(FanconiSurveyLoginPage.ADD);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME_AND_LAST_NAME);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION_CITY_STATE_PROVINCE_COUNTRY_ZIP_CODE);
        assertThat(page.getByRole(AriaRole.COLUMNHEADER, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME))).isVisible();
        assertThat(page.getByRole(AriaRole.COLUMNHEADER, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION))).isVisible();
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.TELEPHONE);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.FAX_NUMBER);
        assertThat(page.getByRole(AriaRole.TABLE)).containsText(FanconiSurveyLoginPage.EMAIL_ADDRESS);
        assertThat(page.getByRole(AriaRole.CELL)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_PHYSICIAN).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_NAME_OF_PHYSICIAN)).containsText(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME_AND_LAST_NAME);
        page.getByLabel(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME).click();
        page.getByLabel(FanconiSurveyLoginPage.NAME_OF_PHYSICIAN_FIRST_NAME).fill(FanconiSurveyLoginPage.PHYSICIAN_FIRST_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TREATMENT_FACILITY)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME);
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME).click();
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_NAME).fill(FanconiSurveyLoginPage.INSTITUTION_NAME);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_TREATMENT_FACILITY_LOCATION)).containsText(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION_CITY_STATE_PROVINCE_COUNTRY_ZIP_CODE);
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION).click();
        page.getByLabel(FanconiSurveyLoginPage.INSTITUTION_HOSPITAL_LOCATION).fill(FanconiSurveyLoginPage.INSTITUTION_LOCATION);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_TELEPHONE)).containsText(FanconiSurveyLoginPage.TELEPHONE);
        page.getByLabel(FanconiSurveyLoginPage.TELEPHONE).click();
        page.getByLabel(FanconiSurveyLoginPage.TELEPHONE).fill(FanconiSurveyLoginPage.ADD_TELEPHONE_NUMBER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_FAX_NUMBER)).containsText(FanconiSurveyLoginPage.FAX_NUMBER);
        page.getByLabel(FanconiSurveyLoginPage.FAX_NUMBER).click();
        page.getByLabel(FanconiSurveyLoginPage.FAX_NUMBER).fill(FanconiSurveyLoginPage.ADD_FAX_NUMBER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PHYSICIAN_EMAIL_ADDRESS)).containsText(FanconiSurveyLoginPage.EMAIL_ADDRESS);
        page.getByLabel(FanconiSurveyLoginPage.EMAIL_ADDRESS).click();
        page.getByLabel(FanconiSurveyLoginPage.EMAIL_ADDRESS).fill(FanconiSurveyLoginPage.ADD_EMAIL_ADDRESS);
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.PHYSICIAN_FIRST_NAME))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_NAME))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.INSTITUTION_LOCATION))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD_TELEPHONE_NUMBER))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD_FAX_NUMBER))).isVisible();
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD_EMAIL_ADDRESS))).isVisible();
        assertThat(page.locator(FanconiSurveyLoginPage.NUM_AFFECTED_FAMILY_MEMBER)).containsText(FanconiSurveyLoginPage.NUM_AFFECTED_FAMILY_MEMBER_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_NUM_AFFECTED_FAMILY_MEMBER_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName("1").setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAIL_LABEL)).containsText(FanconiSurveyLoginPage.AFFECTED_FAMILY_MEMBER_DETAIL_NOTE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.FAMILY_MEMBERS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.ADD_REMOVE_ALL);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.ACTIONS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.FAMILY_MEMBER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.CURRENT_VITAL_STATUS);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.CURRENT_AGE_OR_AGE_AT_DEATH);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.HAVE_THEY_RECEIVED_A_HEMATOPOIETIC_STEM_CELL_TRANSPLANT);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.DO_THEY_HAVE_A_HISTORY_OF_CANCER);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.IF_YES_SPECIFY_CANCER_TYPE_SITE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_CANCER_TYPE_SITE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.NO_DATA_TO_DISPLAY);
        page.getByLabel(FanconiSurveyLoginPage.ADD_A_ROW_FOR_FAMILY_MEMBERS).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_RELATION)).containsText(FanconiSurveyLoginPage.FAMILY_MEMBER);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.FAMILY_MEMBERS, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SP_HELP_TAG)).containsText(FanconiSurveyLoginPage.IF_YOU_DO_NOT_KNOW_PLEASE_SELECT_UNKNOWN_UNSURE);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_RELATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_OTHER_RELATIVE_PLEASE_SPECIFY)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY);
        page.getByLabel(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY, new Page.GetByLabelOptions().setExact(true)).click();
        page.getByLabel(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY, new Page.GetByLabelOptions().setExact(true)).fill(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_VITAL_STATUS)).containsText(FanconiSurveyLoginPage.CURRENT_VITAL_STATUS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_VITAL_STATUS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ALIVE)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CURRENT_AGE_OR_AGE_AT_DEATH)).containsText(FanconiSurveyLoginPage.CURRENT_AGE_OR_AGE_AT_DEATH);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CURRENT_AGE_OR_AGE_AT_DEATH_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.AGE_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_STEM_CELL_TRANSPLANT)).containsText(FanconiSurveyLoginPage.HAVE_THEY_RECEIVED_A_HEMATOPOIETIC_STEM_CELL_TRANSPLANT);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_STEM_CELL_TRANSPLANT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CANCER)).containsText(FanconiSurveyLoginPage.DO_THEY_HAVE_A_HISTORY_OF_CANCER);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CANCER_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CANCER)).containsText(FanconiSurveyLoginPage.DO_THEY_HAVE_A_HISTORY_OF_CANCER);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CANCER_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVE_CANCER_DETAILS)).containsText(FanconiSurveyLoginPage.IF_YES_SPECIFY_CANCER_TYPE_SITE);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_AFFECTED_RELATIVE_CANCER_DETAILS_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCER_ENTERED)).click();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.CANCEL))).isVisible();
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.ADD)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.OTHER_RELATIVE_PLEASE_SPECIFY_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.ALIVE);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.AGE_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.YES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.YES);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_AFFECTED_RELATIVES_DETAILS)).containsText(FanconiSurveyLoginPage.CANCER_ENTERED);
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FAMILY_CAMP)).containsText(FanconiSurveyLoginPage.FA_FAMILY_CAMP_DETAIL);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FAMILY_CAMP_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_FAMILY_CAMP_COUNT)).containsText(FanconiSurveyLoginPage.FA_FAMILY_CAMP_COUNT_DETAILS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_FAMILY_CAMP_COUNT_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.FA_FAMILY_CAMP_COUNT_ENTERED).setExact(true)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_INCLUDED_IN_PUBLICATION)).containsText(FanconiSurveyLoginPage.FA_INCLUDED_IN_PUBLICATION_DETAILS);
        page.locator(FanconiSurveyLoginPage.SP_FORMFIELD_FA_INCLUDED_IN_PUBLICATION_A).click();
        page.getByRole(AriaRole.OPTION, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.YES)).click();
        assertThat(page.locator(FanconiSurveyLoginPage.FA_PUBLICATION)).containsText(FanconiSurveyLoginPage.FA_PUBLICATION_DETAILS);
        page.getByLabel(FanconiSurveyLoginPage.PLEASE_PROVIDE_ANY_ADDITIONAL).click();
        page.getByLabel(FanconiSurveyLoginPage.PLEASE_PROVIDE_ANY_ADDITIONAL).fill(FanconiSurveyLoginPage.PLEASE_PROVIDE_ANY_ADDITIONAL_DETAILS);
        assertThat(page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT))).isVisible();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SUBMIT)).click();
    }

    /* This method allows to login to the Fanconi Survey page and do assertion on the main page */
    public static void login() {
        var page = PlaywrightUtils.page;
        page.navigate(FanconiSurveyLoginPage.FANCONI_SURVEY_URL);
        page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.LOGIN_BUTTON_LINK)).click();
        page.getByLabel(FanconiSurveyLoginPage.USERNAME).fill(FanconiSurveyLoginPage.EMAIL);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.NEXT)).click();
        page.getByLabel(FanconiSurveyLoginPage.PASSWORD).fill(FanconiSurveyLoginPage.USER_PASSWORD);
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.VERIFY)).click();
        page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.AGREE)).click();
        assertThat(page.getByText(FanconiSurveyLoginPage.NCI_FAMILY_STUDIES_HUB)).containsText(FanconiSurveyLoginPage.NCI_FAMILY_STUDIES_HUB);
        assertThat(page.getByText(FanconiSurveyLoginPage.PLEASE_COMPLETE_THE_AVAILABLE)).containsText(FanconiSurveyLoginPage.PLEASE_COMPLETE_THE_AVAILABLE);
        assertThat(page.getByText(FanconiSurveyLoginPage.ELIGIBILITY_QUESTIONNAIRE).first()).containsText(FanconiSurveyLoginPage.ELIGIBILITY_QUESTIONNAIRE);
        assertThat(page.locator(FanconiSurveyLoginPage.SELECTOR).filter(new Locator.FilterOptions().setHasText(FanconiSurveyLoginPage.FANCONI_STUDY_SURVEY))).containsText(FanconiSurveyLoginPage.FANCONI_STUDY_SURVEY);
        assertThat(page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.UPLOAD_ATTACHMENT))).containsText(FanconiSurveyLoginPage.UPLOAD_ATTACHMENT);
        assertThat(page.getByText(FanconiSurveyLoginPage.IF_YOU_HAVE_ANY_QUESTIONS)).containsText(FanconiSurveyLoginPage.IF_YOU_HAVE_ANY_QUESTIONS);
        page.locator(FanconiSurveyLoginPage.SELECTOR).filter(new Locator.FilterOptions().setHasText(FanconiSurveyLoginPage.FANCONI_STUDY_SURVEY)).click();
        assertThat(page.getByRole(AriaRole.BANNER)).containsText(FanconiSurveyLoginPage.NCI_FAMILY_STUDIES_HUB_FANCONI_CANCER);
        assertThat(page.getByText(FanconiSurveyLoginPage.THANK_YOU_FOR_STARTING)).containsText(FanconiSurveyLoginPage.THANK_YOU_FOR_STARTING);
        assertThat(page.getByText(FanconiSurveyLoginPage.THIS_IS_A_STUDY)).containsText(FanconiSurveyLoginPage.THIS_IS_A_STUDY);
        assertThat(page.getByText(FanconiSurveyLoginPage.THIS_QUESTIONNAIRE_MAY_TAKE)).containsText(FanconiSurveyLoginPage.THIS_QUESTIONNAIRE_MAY_TAKE);
        assertThat(page.getByText(FanconiSurveyLoginPage.NOTE_THE_STUDY_TEAM_REQUESTS)).containsText(FanconiSurveyLoginPage.NOTE_THE_STUDY_TEAM_REQUESTS);
        assertThat(page.getByRole(AriaRole.CELL, new Page.GetByRoleOptions().setName(FanconiSurveyLoginPage.SURVEY_SECTIONS))).containsText(FanconiSurveyLoginPage.SURVEY_SECTIONS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.BACKGROUND_INFORMATION).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.BACKGROUND_INFORMATION);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.DEMOGRAPHICS).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.DEMOGRAPHICS);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.MEDICAL_HISTORY, new Page.GetByLabelOptions().setExact(true)).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.MEDICAL_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.MEDICAL_HISTORY_CONTINUED).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.MEDICAL_HISTORY_CONTINUED);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.REPRODUCTIVE_HISTORY).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.REPRODUCTIVE_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.SURGICAL_MEDICATION_AND_OTHER_MEDICAL_HISTORY).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.SURGICAL_MEDICATION_AND_OTHER_MEDICAL_HISTORY);
        assertThat(page.getByLabel(FanconiSurveyLoginPage.SEXUAL_HISTORY).locator(FanconiSurveyLoginPage.SPAN)).containsText(FanconiSurveyLoginPage.SEXUAL_HISTORY);
        CucumberLogUtils.playwrightScreenshot(PlaywrightUtils.page);
    }
}
